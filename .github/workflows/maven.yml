name: Mule CI/CD Pipeline

on:
  # Trigger on push to main and on pull requests targeting main
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

env:
  MAVEN_CACHE_DIR: ~/.m2/repository
  JAVA_VERSION: '17' # Updated to Java 17
  MAVEN_VERSION: '3.9.6' # Target Maven version

jobs:
  # âœ… CI: Build and Validate PR
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download m2-repository.tar.gz from release
        run: |
          curl -L -o m2-repository.tar.gz "https://github.com/davidsantana1103/mule-gcp-deployment-demo/releases/download/1.0.0/m2-repository.tar.gz"
      
      # New step to prepare local .m2 repository
      #- name: Prepare Local M2 Repository
      #  run: |
      #    # Create .m2 directory
      #    mkdir -p ~/.m2/repository
      #    echo "Restoring local M2 repository from secret"
          #cat m2-repository-part-* > m2-repository.tar.gz
      #    tar -xzvf m2-repository.tar.gz -C ~/.m2/repository
      #- name: Search for Mule Runtime Dependency
      #  run: |
      #    find ~/.m2/repository -name "*mule-runtime-impl-no-services-bom*"
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Eclipse Temurin is OpenJDK
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Install Maven ${{ env.MAVEN_VERSION }}
        run: |
          MAVEN_URL="https://dlcdn.apache.org/maven/maven-3/${{ env.MAVEN_VERSION }}/binaries/apache-maven-${{ env.MAVEN_VERSION }}-bin.tar.gz"
          wget $MAVEN_URL
          tar -xvzf apache-maven-${{ env.MAVEN_VERSION }}-bin.tar.gz
          sudo mv apache-maven-${{ env.MAVEN_VERSION }} /opt/maven
          echo "M2_HOME=/opt/maven" >> $GITHUB_ENV
          echo "/opt/maven/bin" >> $GITHUB_PATH

      - name: Verify Maven Version
        run: mvn -v
        
      - name: Configure Maven Settings
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>anypoint-exchange-v3</id>
                <username>${{ secrets.MULE_USERNAME }}</username>
                <password>${{ secrets.MULE_PASSWORD }}</password>
              </server>
              <server>
              <id>github</id>
              <username>${{ github.repository_owner }}</username>
              <password>${{ secrets.MULE_LIBS_TOKEN }}</password>
            </server>
            </servers>
            <repositories>
              <repository>
                <id>github</id>
                <url>https://raw.githubusercontent.com/davidsantana1103/mule-libs/feature/add-libs</url>
                <snapshots>
                  <enabled>true</enabled>
                </snapshots>
              </repository>
            </repositories>
          </settings>
          EOF
          cat ~/.m2/settings.xml

      - name: cat Maven Settings
        run: |
          cat $HOME/.m2/settings.xml

      - name: Build Mule Application with Maven
        run: mvn clean package -Dmaven.repo.local=$HOME/.m2/repository -s $HOME/.m2/settings.xml

      - name: Upload Mule Artifact (JAR)
        uses: actions/upload-artifact@v4
        with:
          name: mule-app
          path: target/*.jar
