name: Mule CI/CD Pipeline

on:
  # Trigger on push to main and on pull requests targeting main
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

env:
  MAVEN_CACHE_DIR: ~/.m2/repository
  JAVA_VERSION: '17' # Updated to Java 17
  MAVEN_VERSION: '3.9.6' # Target Maven version

jobs:
  # âœ… CI: Build and Validate PR
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # New step to prepare local .m2 repository
      - name: Prepare Local M2 Repository
        env:
          # Base64 encoded .m2 repository
          M2_REPO_BASE64: ${{ secrets.LOCAL_M2_REPOSITORY }}
        run: |
          # Create .m2 directory
          mkdir -p ~/.m2/repository
          
          # Check if M2 repository secret is provided
          if [ -n "$M2_REPO_BASE64" ]; then
            echo "Restoring local M2 repository from secret"
            echo "$M2_REPO_BASE64" | base64 --decode > m2-repository.tar.gz
            tar -xzvf m2-repository.tar.gz -C ~/.m2/repository
          else
            echo "No local M2 repository found in secrets"
          fi

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # Eclipse Temurin is OpenJDK
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Install Maven ${{ env.MAVEN_VERSION }}
        run: |
          MAVEN_URL="https://dlcdn.apache.org/maven/maven-3/${{ env.MAVEN_VERSION }}/binaries/apache-maven-${{ env.MAVEN_VERSION }}-bin.tar.gz"
          wget $MAVEN_URL
          tar -xvzf apache-maven-${{ env.MAVEN_VERSION }}-bin.tar.gz
          sudo mv apache-maven-${{ env.MAVEN_VERSION }} /opt/maven
          echo "M2_HOME=/opt/maven" >> $GITHUB_ENV
          echo "/opt/maven/bin" >> $GITHUB_PATH

      - name: Verify Maven Version
        run: mvn -v

      - name: Configure Maven Settings
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>anypoint-exchange-v3</id>
                <username>${{ secrets.MULE_USERNAME }}</username>
                <password>${{ secrets.MULE_PASSWORD }}</password>
              </server>
            </servers>
          </settings>
          EOF
      
      - name: Build Mule Application with Maven
        run: mvn clean package

      - name: Upload Mule Artifact (JAR)
        uses: actions/upload-artifact@v4
        with:
          name: mule-app
          path: target/*.jar
